// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  accounts       Account[]
  sessions       Session[]
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime

  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Career {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  periods Period[]
}

model Period {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  careerId String   @db.ObjectId
  courses  Course[]

  career   Career   @relation(fields: [careerId], references: [id], onDelete: Cascade)
}

model Course {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  periodsId       String[] @db.ObjectId
  name            String
  courseNumber    Int      @unique
  area            String?
  hsWeekly        Int?
  hsTotal         Int?
  hasCorrelatives Boolean  @default(false)
  hasOptatives    Boolean  @default(false)
  hasEquivalents  Boolean  @default(false)

  periods Period @relation(fields: [periodsId], references: [id], onDelete: Cascade)
}


